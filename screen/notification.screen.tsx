import React from "react";
import { View, Text, TouchableOpacity, Alert, StyleSheet } from "react-native";
import * as Notifications from "expo-notifications";
import * as Device from "expo-device";
import Constants from "expo-constants";

// C·∫•u h√¨nh th√¥ng b√°o
Notifications.setNotificationHandler({
  handleNotification: async () => ({
    shouldShowAlert: true,
    shouldPlaySound: true,
    shouldSetBadge: true,
    shouldShowBanner: true, // th√™m d√≤ng n√†y
    shouldShowList: true, // th√™m d√≤ng n√†y
  }),
});

export default function NotificationScreen() {
  // H√†m g·ª≠i th√¥ng b√°o local
  const sendNotification = async () => {
    if (!Device.isDevice) {
      Alert.alert("Ch·ªâ ho·∫°t ƒë·ªông tr√™n thi·∫øt b·ªã th·∫≠t");
      return;
    }

    // ƒêƒÉng k√Ω quy·ªÅn
    const { status } = await Notifications.requestPermissionsAsync();
    if (status !== "granted") {
      Alert.alert("Kh√¥ng c√≥ quy·ªÅn g·ª≠i th√¥ng b√°o");
      return;
    }

    // // L·∫•y push token (t√πy ch·ªçn)
    // await Notifications.getExpoPushTokenAsync({
    //   projectId: Constants.expoConfig?.extra?.eas?.projectId,
    // });

    // G·ª≠i th√¥ng b√°o local
    await Notifications.scheduleNotificationAsync({
      content: {
        title: "üì¢ Xin ch√†o!",
        body: "ƒê√¢y l√† m·ªôt th√¥ng b√°o ƒë∆°n gi·∫£n.",
        sound: "default",
      },
      trigger: null, // G·ª≠i ngay l·∫≠p t·ª©c
    });
  };

  return (
    <View style={styles.container}>
      <TouchableOpacity style={styles.button} onPress={sendNotification}>
        <Text style={styles.buttonText}>G·ª≠i Th√¥ng B√°o</Text>
      </TouchableOpacity>
    </View>
  );
}

// CSS
const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "#f5f5f5",
  },
  button: {
    backgroundColor: "#007AFF",
    paddingVertical: 14,
    paddingHorizontal: 30,
    borderRadius: 12,
  },
  buttonText: {
    color: "#fff",
    fontSize: 16,
    fontWeight: "600",
  },
});
